generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Profile {
    id          String   @id @default(cuid())
    userId      String   @unique
    name        String
    email       String
    parentEmail String
    phoneNumber String
    address     String
    city        String
    state       String
    zipCode     String
    lab         String?
    country     String
    school      String
    gradeLevel  String
    forms       String[]
    user        User     @relation(fields: [userId], references: [id])
}

model User {
    id               String        @id @default(cuid())
    name             String?
    email            String?       @unique
    password         String?
    resetToken       String?
    resetTokenExpiry DateTime?
    isAdmin          Boolean       @default(false)
    profile          Profile?
    applications     Application[]
}

model Application {
    id                     String               @id @default(cuid())
    userId                 String               @unique
    user                   User                 @relation(fields: [userId], references: [id], onDelete: Cascade)
    name                   String?
    email                  String?
    school                 String?
    udlStudent             Boolean              @default(false)
    gradeLevel             String?
    yearsOfExperience      String?
    numTournaments         String?
    debateExperience       String?              @db.Text
    interestEssay          String?              @db.Text
    selfAptitudeAssessment String?              @db.Text
    status                 ApplicationStatus    @default(IN_PROGRESS)
    createdAt              DateTime             @default(now())
    updatedAt              DateTime             @updatedAt
    programConfirmation    ProgramConfirmation?
}

model ProgramConfirmation {
    id                  String      @id @default(cuid())
    applicationId       String      @unique
    application         Application @relation(fields: [applicationId], references: [id], onDelete: Cascade)
    studentName         String
    parentName          String
    emergencyContact    String
    dietaryRestrictions String?     @db.Text
    medicalConditions   String?     @db.Text
    photoRelease        Boolean
    liabilityWaiver     Boolean
    paymentMethod       String
    financialAidRequest Boolean
    additionalNotes     String?     @db.Text
    submittedAt         DateTime
    createdAt           DateTime    @default(now())
    updatedAt           DateTime    @updatedAt
}

enum ApplicationStatus {
    IN_PROGRESS
    SUBMITTED
    ACCEPTED
    WAITLISTED
    DENIED
    WITHDRAWN
}
